name: Build Documentation

on:
  pull_request:
    paths:
      - '**.py'
      - '**.ipynb'
      - '**.rst'
      - '**.md'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Micromamba
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: DOCS
        create-args: >-
          python=3.11 pip
          --file requirements-dev.txt
          --channel conda-forge
        init-shell: bash

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install package
      run: |
        pip install -e .

    - name: Show Python version
      run: |
        echo "Using Python:" && which python && python --version

    # Execute the demo notebook to generate output.
    # --ExecutePreprocessor.allow_errors=True means the notebook will continue even if a cell fails.
    # Recommended for early development; you can set allow_errors=False later when production-ready.
    - name: Build and Deploy Docs
      shell: bash -l {0}
      run: |
        eval "$(micromamba shell hook --shell=bash)"
        micromamba activate DOCS
        jupyter nbconvert --to notebook --execute notebooks/demo.ipynb --output=demo-output.ipynb --ExecutePreprocessor.allow_errors=True
        mv notebooks/*output.ipynb docs/source/
        pushd docs
        make clean html
        popd
